#!/usr/bin/env python3
"""
TESTE FINAL DE LIBERDADE DE DATAS - SISTEMA PNSB
=================================================

Este script verifica definitivamente se o sistema permite 
agendamento em qualquer data (passada, presente, futura).
"""

import os
import sys
from datetime import datetime, date, timedelta
from pathlib import Path

def verificar_arquivos_modificados():
    """Verifica se todos os arquivos foram modificados corretamente."""
    print("üîç VERIFICANDO ARQUIVOS MODIFICADOS...")
    print("=" * 50)
    
    resultados = {}
    
    # 1. Verificar validators.py
    validators_path = Path("gestao_visitas/utils/validators.py")
    if validators_path.exists():
        with open(validators_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        if "Removida restri√ß√£o de data passada" in content:
            print("   ‚úÖ validators.py: LIBERDADE IMPLEMENTADA")
            resultados['validators'] = True
        else:
            print("   ‚ùå validators.py: AINDA COM RESTRI√á√ïES")
            resultados['validators'] = False
    else:
        print("   ‚ùå validators.py: ARQUIVO N√ÉO ENCONTRADO")
        resultados['validators'] = False
    
    # 2. Verificar app.py
    app_path = Path("app.py")
    if app_path.exists():
        with open(app_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        if "sem restri√ß√£o de data passada" in content:
            print("   ‚úÖ app.py: LIBERDADE IMPLEMENTADA")
            resultados['app'] = True
        else:
            print("   ‚ùå app.py: AINDA COM RESTRI√á√ïES")
            resultados['app'] = False
    else:
        print("   ‚ùå app.py: ARQUIVO N√ÉO ENCONTRADO")
        resultados['app'] = False
    
    # 3. Verificar visitas.html
    template_path = Path("gestao_visitas/templates/visitas.html")
    if template_path.exists():
        with open(template_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        if "Removido valida√ß√£o de data passada" in content:
            print("   ‚úÖ visitas.html: LIBERDADE IMPLEMENTADA")
            resultados['template'] = True
        else:
            print("   ‚ùå visitas.html: AINDA COM RESTRI√á√ïES")
            resultados['template'] = False
    else:
        print("   ‚ùå visitas.html: ARQUIVO N√ÉO ENCONTRADO")
        resultados['template'] = False
    
    return resultados

def testar_validador_python():
    """Testa diretamente a fun√ß√£o de valida√ß√£o Python."""
    print("\nüêç TESTANDO VALIDA√á√ÉO PYTHON...")
    print("=" * 50)
    
    try:
        # Importar o validador
        sys.path.append('gestao_visitas/utils')
        from validators import validate_date
        
        # Testar datas variadas
        datas_teste = [
            ("2024-01-01", "Data do ano passado"),
            ("2025-06-30", "Data de ontem"),
            ("2025-07-01", "Data de hoje"),
            ("2025-12-31", "Data futura"),
            ("2020-05-15", "Data bem passada")
        ]
        
        sucessos = 0
        for data_str, descricao in datas_teste:
            try:
                resultado = validate_date(data_str)
                print(f"   ‚úÖ {descricao} ({data_str}): ACEITA")
                sucessos += 1
            except Exception as e:
                print(f"   ‚ùå {descricao} ({data_str}): REJEITADA - {e}")
        
        print(f"\nüìä RESULTADO: {sucessos}/{len(datas_teste)} datas aceitas")
        return sucessos == len(datas_teste)
        
    except ImportError as e:
        print(f"   ‚ùå ERRO: N√£o foi poss√≠vel importar validators.py - {e}")
        return False
    except Exception as e:
        print(f"   ‚ùå ERRO INESPERADO: {e}")
        return False

def mostrar_instrucoes_usuario():
    """Mostra instru√ß√µes finais para o usu√°rio."""
    print("\n" + "=" * 60)
    print("üéØ INSTRU√á√ïES PARA TESTAR NO NAVEGADOR")
    print("=" * 60)
    print()
    print("1Ô∏è‚É£ REINICIE O SISTEMA:")
    print("   ‚Ä¢ Pare o app.py atual (Ctrl+C)")
    print("   ‚Ä¢ Execute novamente: python app.py")
    print()
    print("2Ô∏è‚É£ LIMPE O CACHE DO NAVEGADOR:")
    print("   ‚Ä¢ Pressione Ctrl + Shift + Delete")
    print("   ‚Ä¢ OU abra uma aba an√¥nima/privada")
    print("   ‚Ä¢ OU pressione Ctrl + F5 para hard refresh")
    print()
    print("3Ô∏è‚É£ TESTE O AGENDAMENTO:")
    print("   ‚Ä¢ Acesse: http://localhost:5000")
    print("   ‚Ä¢ V√° em 'Gest√£o de Visitas'")
    print("   ‚Ä¢ Clique 'Nova Visita'")
    print("   ‚Ä¢ Digite uma data passada (ex: 2024-01-15)")
    print("   ‚Ä¢ Preencha os outros campos")
    print("   ‚Ä¢ Clique 'Salvar'")
    print()
    print("4Ô∏è‚É£ TESTE A EDI√á√ÉO:")
    print("   ‚Ä¢ Clique 'Editar' em uma visita existente")
    print("   ‚Ä¢ Altere para uma data passada")
    print("   ‚Ä¢ Salve as altera√ß√µes")
    print()
    print("‚úÖ SE N√ÉO HOUVER MAIS ERRO DE 'data anterior', FUNCIONOU!")

def main():
    print("=" * 60)
    print("üéâ TESTE FINAL DE LIBERDADE DE DATAS - SISTEMA PNSB")
    print("=" * 60)
    
    # Verificar se estamos no diret√≥rio correto
    if not Path("app.py").exists():
        print("‚ùå ERRO: Execute este script no diret√≥rio do projeto")
        print("   cd 'Verifica√ß√£o Informantes PNSB/Agente IA'")
        sys.exit(1)
    
    # Verificar arquivos modificados
    resultados_arquivos = verificar_arquivos_modificados()
    
    # Testar valida√ß√£o Python
    validacao_ok = testar_validador_python()
    
    # Resultado geral
    print("\n" + "=" * 60)
    print("üìä RESULTADO FINAL DO TESTE")
    print("=" * 60)
    
    todos_ok = all(resultados_arquivos.values()) and validacao_ok
    
    if todos_ok:
        print("üéâ SUCESSO TOTAL!")
        print("   ‚úÖ Todos os arquivos modificados corretamente")
        print("   ‚úÖ Valida√ß√£o Python aceita datas passadas")
        print("   ‚úÖ Sistema pronto para liberdade de datas")
        print()
        print("üöÄ PR√ìXIMO PASSO: Teste no navegador seguindo as instru√ß√µes abaixo")
    else:
        print("‚ö†Ô∏è PROBLEMAS ENCONTRADOS:")
        if not resultados_arquivos.get('validators'):
            print("   ‚ùå Arquivo validators.py n√£o foi modificado")
        if not resultados_arquivos.get('app'):
            print("   ‚ùå Arquivo app.py n√£o foi modificado")
        if not resultados_arquivos.get('template'):
            print("   ‚ùå Arquivo visitas.html n√£o foi modificado")
        if not validacao_ok:
            print("   ‚ùå Valida√ß√£o Python ainda rejeita datas passadas")
    
    # Mostrar instru√ß√µes para teste no navegador
    mostrar_instrucoes_usuario()
    
    print("\n" + "=" * 60)
    print("üí° RESUMO DA FUNCIONALIDADE IMPLEMENTADA")
    print("=" * 60)
    print("‚úÖ PODE agendar visitas em QUALQUER data")
    print("‚úÖ PODE editar datas livremente")
    print("‚úÖ PODE registrar visitas j√° realizadas")
    print("‚úÖ MANT√âM valida√ß√£o de formato (YYYY-MM-DD)")
    print("‚úÖ REJEITA datas imposs√≠veis (2025-13-01)")
    print("=" * 60)

if __name__ == "__main__":
    main()